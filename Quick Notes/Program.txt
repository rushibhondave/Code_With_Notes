

रघु नन्दन रघु रघु नन्दन 
रघु वर सेवन रघुपति छायना
शत योजन शत शत योजन
शर धि नियोजन शर परि लंघन

रघु नन्दन रघु रघुbनन्दन 
रघु वर सेवन रघुपति छायन
शत योजन शत शत योजन
शर धि नियोजन शर परि लंघनमे

हरि भाजन हरि हरि भाजन
हरि मद भाजन दशमुख कंपन 
बड़ बाकृत बड़ बड़ बाकृत 
बड़ बाल कृत बहु भस्मा चन
जय केतन जय जय केतन 
जय हय प्रापुल जयमिड दापुदने

रघु नन्दन रघु रघु नन्दन 
रघु वर सेवन रघुपति छायना
शत योजन शत शत योजन
शर धि नियोजन शर परि लंघन

हरि भाजन हरि हरि भाजन
हरि मद भाजन दशमुख कंपन 
बड़ बाकृत बड़ बड़ बाकृत 
बड़ बाल कृत बहु भस्मा चन
जय केतन जय जय केतन 
जय हय प्रापुल जयमिड दापुदने

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;


using static System.Runtime.InteropServices.JavaScript.JSType;

namespace _Interface_Silver_Gold
{
    public class program
    {
        static void Main(string[] args)
        {
            string Op;
            do
            {
                Console.WriteLine("Enter your preminum: ");
                Console.WriteLine("1.Silver 2.Gold 3.Platinum");
                int choice = Convert.ToInt32(Console.ReadLine());
                PremiumFactory pf = new PremiumFactory();
                switch (choice)
                {
                    case 1:
                        ISilver silver = pf.getData(choice);
                        Console.WriteLine("Enter preminum: ");
                        Console.WriteLine("1.Water");
                        int ch = Convert.ToInt32(Console.ReadLine());
                        if (ch == 1)
                            silver.water();
                        else
                            Console.WriteLine("Aukat se bahar");
                        break;
                    case 2:
                        IGold gold = (IGold)pf.getData(choice);
                        Console.WriteLine("Enter preminum: ");
                        Console.WriteLine("1.Water 2.Tea");
                        int ch1 = Convert.ToInt32(Console.ReadLine());
                        if (ch1 == 1)
                            gold.water();
                        else if (ch1 == 2)
                            gold.Tea();
                        else
                            Console.WriteLine("Aukat se bahar");
                        break;
                    case 3:
                        IPlatinum platinum = (IPlatinum)pf.getData(choice);
                        Console.WriteLine("Enter preminum: ");
                        Console.WriteLine("1.Water 2.Tea 3.Coffee");
                        int ch2 = Convert.ToInt32(Console.ReadLine());
                        if (ch2 == 1)
                            platinum.water();
                        else if (ch2 == 2)
                            platinum.Tea();
                        else if (ch2 == 3)
                            platinum.Coffee();
                        else
                            Console.WriteLine("Aukat se bahar");
                        break;
                }
                Console.WriteLine("Do you want to continue?n/y");
                Op = Console.ReadLine();
            } while (Op == "y");
        }
    }



    public class PremiumFactory
    {
        public ISilver getData(int pf)
        {
            if (pf == 1)
                return new customer1();
            else if (pf == 2)
                return new customer2();
            else if (pf == 3)
                return new customer3();
            else
                return null;

        }
    }
    public interface ISilver
    {
        public void water();
    }
    public interface IGold
    {
        public void water();
        public void Tea();
    }
    public interface IPlatinum
    {
        public void water();
        public void Tea();
        public void Coffee();
    }

    public class customer1 : ISilver
    {
        public void water()
        {
            Console.WriteLine("I drink Water");
        }
    }

    public class customer2 : ISilver, IGold
    {
        public void water()
        {
            Console.WriteLine("I drink Water");
        }
        public void Tea()
        {
            Console.WriteLine("I drink Tea");
        }
    }

    public class customer3 : IPlatinum, ISilver, IGold
    {
        public void water()
        {
            Console.WriteLine("I drink Water");
        }
        public void Tea()
        {
            Console.WriteLine("I drink Tea");
        }
        public void Coffee()
        {
            Console.WriteLine("I drink Coffee");
        }
    }
}













namespace Bank
{
    public class bank_info
    {

        public void bank_info1()
        {
            Console.WriteLine("Enter the Customer Count you want to store");
            int NUM_Customer = Convert.ToInt32(Console.ReadLine());
            const int DATA_SIZE = 4; //  Name,Age,Account_type,Deposite,

            string[,] players = new string[NUM_Customer, DATA_SIZE];


            for (int i = 0; i < NUM_Customer; ++i)
            {
                Console.WriteLine($"\n\t\t************  Enter details for Customer {i + 1} : ************");
                for (int j = 0; j < DATA_SIZE; ++j)
                {
                    switch (j)
                    {
                        case 0:
                            Console.Write("Name: ");
                            break;
                        case 1:
                            Console.Write("Age: ");
                            break;
                        case 2:
                            Console.Write("Account Type: ");
                            break;
                        case 3:
                            Console.Write("Deposite: ");
                            break;
                    }
                    players[i, j] = Console.ReadLine();
                }
            }


           
            for (int i = 0; i < NUM_Customer; ++i)
            {
                Console.WriteLine($"\n\t\t************  Customer details for Customer {i + 1} : ************");
                Console.WriteLine($"Customer {i + 1}:");
                for (int j = 0; j < DATA_SIZE; ++j)
                {
                    switch (j)
                    {
                        case 0:
                            Console.Write("Name: ");
                            break;
                        case 1:
                            Console.Write("Age: ");
                            break;
                        case 2:
                            Console.Write("Account Type: ");
                            break;
                        case 3:
                            Console.Write("Deposite: ");
                            break;
                    }
                    Console.WriteLine(players[i, j]);
                }
                Console.WriteLine();
            }

        }
    }
}







using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Intrinsics.X86;
using System.Text;
using System.Threading;
using System.Threading.Tasks;


//#include <iostream>
#include<bits/stdc++.h>
#include<string>
using namespace std;

//struct Player {
//	int numPlayers ;
//	int  id;
//	string name  ;
//	string role  ;                But I just use only the class to handle this problem.
//	int	match_played ;
//	int	wikets ;
//	int	runs ;
//	int	play_innings ;
//};
static int inngs=0;
class Cricket {

		static const int NUM_FIELDS = 100;
		int  id[NUM_FIELDS];
		string name[NUM_FIELDS] ;
		string role[NUM_FIELDS] ;
		string team[NUM_FIELDS] ;
		int match_played[NUM_FIELDS];
		int runs[NUM_FIELDS];
		int Batsman_wickets[NUM_FIELDS];
		int wickets[NUM_FIELDS];
		int Bowler_runs[NUM_FIELDS];
		int mergeRuns[NUM_FIELDS];
		int numPlayers,highScore,highWkts;
		string  Batting="Batsman",Bowling="Bowler",Allrounder="BattingAllrounder";
		double Avg_runs,Bowl_Economy;
		string input13, yes="1",no="2";
		int min,max;


	public:

		void get_Player_data() {
			cout<<"Enter the Player you want to store in Data::";
			cin>>numPlayers;
			for (int i = 0; i < numPlayers; ++i) {
				cout<<"\n\t\t**********************  Player " <<"[ "<<i+1<<" ]"<< " Information **********************"<<endl;
				cout << "\nEnter the player's ID " << i + 1 << ": ";
				cin >> id[i];
				cout << "Enter the player's Name " << i + 1 << ": ";
				cin >> name[i];
				cout << "Enter the player's Role :"<< i + 1<<"  1)Batsman 2)Bowler 3)BattingAllrounder : ";
				cin >> role[i];
				cout << "Enter the player's Match Played " << i + 1 << ": ";
				cin >> match_played[i] ;

				int matchplayed=match_played[i];
				
				if(role[i]==Batting) 
				{
						cout<<"Enter the player's Runs "<<i+1<<":"<<endl;
					for(int i=0; i<matchplayed; i++) {

						do {
							cout <<"Match NO " << i + 1 << ": ";
							cin>>runs[i];
							inngs++;
							i++;
						} while(i!=matchplayed);



						cout<<"Player want to bowling in this match 1)Yes 2)No :"<<i+1<<":";
						cin>>input13;
						if(input13==yes) {
							int input1;
							cout<<" how much innges batsmen play :";
							cin>>input1;
							for(int i=0; i<input1; i++) {
								cout<<"Enter the wikets"<<i+1<<":";
								cin>>Batsman_wickets[i];
								inngs++;
							}
						}



					}

				}


				if(role[i]==Bowling) {

                    cout<<"Enter the player's Wickets "<<i+1<<":"<<endl;
					for(int i=0; i<matchplayed; i++) {

						do {
							cout<<"Enter the player's Wickets "<<i+1<<":"<<endl;
							cout <<"Match No Wickets" << i + 1 << ": ";
							cin>>wickets[i];
							inngs++;
							i++;
						} while(i!=matchplayed);

						cout<<"Player want to batting in this match 1)Yes 2)No :"<<i+1<<":";
						cin>>input13;
						if(input13==yes) {
							int input1;
							cout<<" how much innges bowler do batting play :";
							cin>>input1;
							for(int i=0; i<input1; i++) {
								cout<<"Enter the wikets"<<i+1<<":";
								cin>>Bowler_runs[i];
								inngs++;
							}
						}

					}
				}
				if(role[i]==Allrounder) {
					cout << "Enter the player's Runs " << i + 1 << ": ";
					for (int i = 0; i < matchplayed; ++i) {
						cout <<"Match NO " << i + 1 << ": ";
						cin>>runs[i];
					}

					cout << "Enter the player's Wickets " << i + 1 << ": ";
					for (int i = 0; i < matchplayed; ++i) {
						cout <<"Match No Wickets" << i + 1 << ": ";
					}



				}
				for(int i=0; i<matchplayed; i++) {
					mergeRuns[i]=runs[i];
				}
			//	min_max();


				cout<<"Which team does this player play for? 1)team Name 2)NA - "<<i+1<<":";
				cin >> team[i];

			}
				}


//		}
//		void min_max() {
//
//			max=mergeRuns[0];
//			min=mergeRuns[0];
//			for(int i=0; i<matchplayed; i++) {
//				if(max<mergeRuns[i])
//					max=mergeRuns[i];
//				else if(min>mergeRuns[i])
//					min=mergeRuns[i];
//
//			}
//
//			cout<<"\nMaximum Score :: "<<max;
//			cout<<"\nMinimum Score: "<<min;
//
//		}
		void  display_Data() 
		{
			for (int i = 0; i < numPlayers; ++i) {
				cout<<"\n\t\t**********************  Player " <<"[ "<<i+1<<" ]"<< " Information **********************"<<endl;
				cout << "\n Player's ID " << i + 1 << ": " <<id[i]<<endl;
				cout << " Player's Name " << i + 1 << ": "<<name[i]<<endl;
				cout << "Player Role" << i + 1 << ": "<< role[i]<<endl;
				cout << "Player's Match Played " << i + 1 << ": "<<match_played[i]<<endl;
				int m=match_played[i];
				 cout<<" Runs of the player :"<<endl;
				  	for(int i=0; i<m; i++) 
				  {
				      cout<<"Match No"<<i+1<<runs[i]<<endl;	
				  }
	
            }
		}

};



int main() {
	Cricket c1;
	c1.get_Player_data();
	c1.display_Data();



}


