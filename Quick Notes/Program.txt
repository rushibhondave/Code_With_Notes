

रघु नन्दन रघु रघु नन्दन 
रघु वर सेवन रघुपति छायना
शत योजन शत शत योजन
शर धि नियोजन शर परि लंघन

रघु नन्दन रघु रघुbनन्दन 
रघु वर सेवन रघुपति छायन
शत योजन शत शत योजन
शर धि नियोजन शर परि लंघनमे

हरि भाजन हरि हरि भाजन
हरि मद भाजन दशमुख कंपन 
बड़ बाकृत बड़ बड़ बाकृत 
बड़ बाल कृत बहु भस्मा चन
जय केतन जय जय केतन 
जय हय प्रापुल जयमिड दापुदने

रघु नन्दन रघु रघु नन्दन 
रघु वर सेवन रघुपति छायना
शत योजन शत शत योजन
शर धि नियोजन शर परि लंघन

हरि भाजन हरि हरि भाजन
हरि मद भाजन दशमुख कंपन 
बड़ बाकृत बड़ बड़ बाकृत 
बड़ बाल कृत बहु भस्मा चन
जय केतन जय जय केतन 
जय हय प्रापुल जयमिड दापुदने

//namespace FactoryMethod
//{
//    internal class Program
//    {
//        static void Main(string[] args)
//        {
//            Console.WriteLine("Hi i am Rushikesh ");
//            Console.ReadKey();
//        }
//    }

//}


using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Intrinsics.X86;
using System.Text;
using System.Threading;
using System.Threading.Tasks;

namespace Project1
{
    internal class Program
    {
        private static object deposite;
        static void Main(string[] args)
        { 
           
            Console.WriteLine("How much Custemer data do you want to store here?");
            int n=Convert.ToInt32(Console.ReadLine());
            int mul = n * 20;
            string[] depositName = new string[mul]; 
            int[] withdraw = new int[mul];
            int[] depositAmount = new int[mul];
            string[] withdrawName = new string[mul];
            int[] deposit = new int[mul];
            int choice,temp=0 , total_amount=500;
            int temp12=0, cnt = 0;;
            String ch;
            do
            {
                Console.Write("\n\tEnter choice: 1.Deposit  2.Withdraw 3.total_amount 4.(last 5 transition)  5.Exit :");
                choice = Convert.ToInt32(Console.ReadLine());
                switch (choice)
                {
                    case 1:
                        {
                            Console.WriteLine("\n\t\t********* Welcome to the Deposit procedure ::********* \n");
                            Console.WriteLine("Enter the Nominee  Name  ");
                            for (int i = 0; i < n; i++)
                            {
                                Console.Write($"\nNominee Name :: {i + 1}:");
                                depositName[i] = Console.ReadLine();

                                Console.WriteLine("\nEnter the Amount you want to deposit ");
                                int no=0;
                                int nn = 0;
                          
                                do
                                { 
                                  
                                    for (int k = 0; k <=nn; k++)
                                    {
                                        
                                        Console.Write($"\nDeposite Amount :: {k + 1}: ");
                                        deposit[k] = Convert.ToInt32(Console.ReadLine());
                                        Console.Write($"\nYou want to continue Deposite your amount again :: {k + 1}: 1.Yes or 2.No : ");
                                        no = Convert.ToInt32(Console.ReadLine());
                                        if(no==1)
                                        {
                                            nn++;
                                        }
                                        cnt++;
                                    }



                                    temp12 = cnt;
                                } while (no != 2);
                               
                            

                            }
                            
                        }

                             Console.WriteLine("\n\t\t********* Succsfullly Data Insert ....! *********");
                            Console.WriteLine();
                            break;
                       
                    case 2:
                        {
                            Console.WriteLine("\n\n\t\t*********Welcome to the Withdraw procedure ::********* \n");
                            Console.WriteLine("\nAvailable Balance ::" + total_amount);

                            Console.WriteLine("\nGive me a withdraw amount for cheacking Balance: ");
                            int noo = Convert.ToInt32(Console.ReadLine());
                            if (noo > total_amount)
                            {
                                Console.WriteLine("\nNot suffisent balance on your Account....!\n");
                            }
                            else
                            {
                                Console.WriteLine("\nSuffisent balance on your Account Withdraw procedure Start....!\n");
                                Console.WriteLine("Enter the Nominee  Name  ");
                            for (int i = 0; i < n; i++)
                            {
                                Console.Write($"\nNominee Name :: {i + 1}:");
                                  withdrawName[i] = Console.ReadLine();

                                    int nn = 0;
                                    int no = 0;
                                    do
                                    {

                                        for (int k = 0; k <= nn; k++)
                                        {
                                            Console.Write($"Withdraw Amount::  {k + 1}: ");
                                            withdraw[k] = Convert.ToInt32(Console.ReadLine());
                                            temp = withdraw[k];

                                            Console.Write($"\nYou want to continue Deposite your amount again :: 1.Yes or 2.No : ");
                                            no = Convert.ToInt32(Console.ReadLine());
                                            if (no == 1)
                                            {
                                                nn++;
                                            }
                                            cnt++;
                                        }
                                      
                                        temp12 = cnt;

                                        total_amount -= temp;

                                    } while (no != 2);

                                }
                            }
                        //Console.WriteLine("\nTotal amount after WithdraW:" + total_amount);
                       Console.WriteLine("\t\t\n****************Thank you for visiting****************\n");
                        }
                        break;
                    case 3:
                        Console.WriteLine("Total amount: " + total_amount);
                        break;

                    case 4:
                        {
                            Console.Write("\nShow last 5 trastion choose  1.Deposite 2.Withdraw");
                            int sum=Convert.ToInt32(Console.ReadLine());    
                            if(sum==1)
                            {
                                Console.WriteLine("\nDisplay Deposite Data::");
                                for (int i = 0; i <=temp12; i++)
                                {
                                    Console.WriteLine($"Nominee  Name:: {i + 1}: {depositName[i]}");
                                    Console.WriteLine($"deposit Amount:: {i + 1}: {deposit[i]}");
                                    Console.WriteLine("\n");



                                }
                            }
                            else 
                            {
                                Console.WriteLine("Display  Withdraw Data::");
                                for (int i = 0; i <=temp12; i++)
                                {
                                    Console.WriteLine($"Nominee  Name:: {i + 1}: {withdrawName[i]}");
                                    Console.WriteLine($"Withdraw Amount:: {i + 1}: {withdraw[i]}");
                                    Console.WriteLine("\n");
                                }
                            }
                        }
                        break;
                    case 5:  
                        System.Environment.Exit(0);
                        break;
                      

                }
                Console.WriteLine("Do you want to continue ? ");
                ch = Console.ReadLine();
            }
            while (ch == "y");
        }
    }
}

//#include <iostream>
#include<bits/stdc++.h>
#include<string>
using namespace std;

//struct Player {
//	int numPlayers ;
//	int  id;
//	string name  ;
//	string role  ;                But I just use only the class to handle this problem.
//	int	match_played ;
//	int	wikets ;
//	int	runs ;
//	int	play_innings ;
//};
static int inngs=0;
class Cricket {

		static const int NUM_FIELDS = 100;
		int  id[NUM_FIELDS];
		string name[NUM_FIELDS] ;
		string role[NUM_FIELDS] ;
		string team[NUM_FIELDS] ;
		int match_played[NUM_FIELDS];
		int runs[NUM_FIELDS];
		int Batsman_wickets[NUM_FIELDS];
		int wickets[NUM_FIELDS];
		int Bowler_runs[NUM_FIELDS];
		int mergeRuns[NUM_FIELDS];
		int numPlayers,highScore,highWkts;
		string  Batting="Batsman",Bowling="Bowler",Allrounder="BattingAllrounder";
		double Avg_runs,Bowl_Economy;
		string input13, yes="1",no="2";
		int min,max;


	public:

		void get_Player_data() {
			cout<<"Enter the Player you want to store in Data::";
			cin>>numPlayers;
			for (int i = 0; i < numPlayers; ++i) {
				cout<<"\n\t\t**********************  Player " <<"[ "<<i+1<<" ]"<< " Information **********************"<<endl;
				cout << "\nEnter the player's ID " << i + 1 << ": ";
				cin >> id[i];
				cout << "Enter the player's Name " << i + 1 << ": ";
				cin >> name[i];
				cout << "Enter the player's Role :"<< i + 1<<"  1)Batsman 2)Bowler 3)BattingAllrounder : ";
				cin >> role[i];
				cout << "Enter the player's Match Played " << i + 1 << ": ";
				cin >> match_played[i] ;

				int matchplayed=match_played[i];
				
				if(role[i]==Batting) 
				{
						cout<<"Enter the player's Runs "<<i+1<<":"<<endl;
					for(int i=0; i<matchplayed; i++) {

						do {
							cout <<"Match NO " << i + 1 << ": ";
							cin>>runs[i];
							inngs++;
							i++;
						} while(i!=matchplayed);



						cout<<"Player want to bowling in this match 1)Yes 2)No :"<<i+1<<":";
						cin>>input13;
						if(input13==yes) {
							int input1;
							cout<<" how much innges batsmen play :";
							cin>>input1;
							for(int i=0; i<input1; i++) {
								cout<<"Enter the wikets"<<i+1<<":";
								cin>>Batsman_wickets[i];
								inngs++;
							}
						}



					}

				}


				if(role[i]==Bowling) {

                    cout<<"Enter the player's Wickets "<<i+1<<":"<<endl;
					for(int i=0; i<matchplayed; i++) {

						do {
							cout<<"Enter the player's Wickets "<<i+1<<":"<<endl;
							cout <<"Match No Wickets" << i + 1 << ": ";
							cin>>wickets[i];
							inngs++;
							i++;
						} while(i!=matchplayed);

						cout<<"Player want to batting in this match 1)Yes 2)No :"<<i+1<<":";
						cin>>input13;
						if(input13==yes) {
							int input1;
							cout<<" how much innges bowler do batting play :";
							cin>>input1;
							for(int i=0; i<input1; i++) {
								cout<<"Enter the wikets"<<i+1<<":";
								cin>>Bowler_runs[i];
								inngs++;
							}
						}

					}
				}
				if(role[i]==Allrounder) {
					cout << "Enter the player's Runs " << i + 1 << ": ";
					for (int i = 0; i < matchplayed; ++i) {
						cout <<"Match NO " << i + 1 << ": ";
						cin>>runs[i];
					}

					cout << "Enter the player's Wickets " << i + 1 << ": ";
					for (int i = 0; i < matchplayed; ++i) {
						cout <<"Match No Wickets" << i + 1 << ": ";
					}



				}
				for(int i=0; i<matchplayed; i++) {
					mergeRuns[i]=runs[i];
				}
			//	min_max();


				cout<<"Which team does this player play for? 1)team Name 2)NA - "<<i+1<<":";
				cin >> team[i];

			}
				}


//		}
//		void min_max() {
//
//			max=mergeRuns[0];
//			min=mergeRuns[0];
//			for(int i=0; i<matchplayed; i++) {
//				if(max<mergeRuns[i])
//					max=mergeRuns[i];
//				else if(min>mergeRuns[i])
//					min=mergeRuns[i];
//
//			}
//
//			cout<<"\nMaximum Score :: "<<max;
//			cout<<"\nMinimum Score: "<<min;
//
//		}
		void  display_Data() 
		{
			for (int i = 0; i < numPlayers; ++i) {
				cout<<"\n\t\t**********************  Player " <<"[ "<<i+1<<" ]"<< " Information **********************"<<endl;
				cout << "\n Player's ID " << i + 1 << ": " <<id[i]<<endl;
				cout << " Player's Name " << i + 1 << ": "<<name[i]<<endl;
				cout << "Player Role" << i + 1 << ": "<< role[i]<<endl;
				cout << "Player's Match Played " << i + 1 << ": "<<match_played[i]<<endl;
				int m=match_played[i];
				 cout<<" Runs of the player :"<<endl;
				  	for(int i=0; i<m; i++) 
				  {
				      cout<<"Match No"<<i+1<<runs[i]<<endl;	
				  }
	
            }
		}

};



int main() {
	Cricket c1;
	c1.get_Player_data();
	c1.display_Data();



}


